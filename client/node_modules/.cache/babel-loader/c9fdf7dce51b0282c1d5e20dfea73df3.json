{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\context\\\\candidates-context.jsx\";\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport fetchData from \"../services/api\";\nimport { useAuth } from \"./auth-context\";\nconst CandidatesContext = createContext();\nexport const useCandidates = () => useContext(CandidatesContext);\nexport function CandidatesProvider({\n  children\n}) {\n  const {\n    jwt\n  } = useAuth();\n  const [candidates, setCandidates] = useState([]);\n  const [chosenCandidate, setChosenCandidate] = useState({});\n  const [paginationData, setPaginationData] = useState({\n    page: 1,\n    limit: 20,\n    numberOfPages: 5\n  });\n  useEffect(() => {\n    setPaginationData;\n  }, [paginationData.page, paginationData.limit]);\n\n  const updatePaginationData = async (field, value) => {\n    console.log(\"newpage\", value);\n    await setPaginationData({ ...paginationData,\n      [field]: value\n    });\n  };\n\n  const getCandidates = () => {\n    fetchData(`/candidates/${paginationData.page}/${paginationData.limit}`, \"get\", jwt).then(res => {\n      setCandidates(res.candidates);\n      setPaginationData({ ...paginationData,\n        numberOfPages: Math.ceil(res.totalCandidates / paginationData.limit)\n      });\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  };\n\n  const chooseCandidate = candi => {\n    setChosenCandidate(candi);\n  };\n\n  return /*#__PURE__*/React.createElement(CandidatesContext.Provider, {\n    value: {\n      candidates,\n      paginationData,\n      getCandidates,\n      chooseCandidate,\n      chosenCandidate,\n      updatePaginationData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/context/candidates-context.jsx"],"names":["React","useState","createContext","useContext","useEffect","fetchData","useAuth","CandidatesContext","useCandidates","CandidatesProvider","children","jwt","candidates","setCandidates","chosenCandidate","setChosenCandidate","paginationData","setPaginationData","page","limit","numberOfPages","updatePaginationData","field","value","console","log","getCandidates","then","res","Math","ceil","totalCandidates","catch","error","chooseCandidate","candi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,MAAMC,iBAAiB,GAAGL,aAAa,EAAvC;AACA,OAAO,MAAMM,aAAa,GAAG,MAAML,UAAU,CAACI,iBAAD,CAAtC;AAEP,OAAO,SAASE,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAUL,OAAO,EAAvB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC;AACnDiB,IAAAA,IAAI,EAAE,CAD6C;AAEnDC,IAAAA,KAAK,EAAE,EAF4C;AAGnDC,IAAAA,aAAa,EAAE;AAHoC,GAAD,CAApD;AAMAhB,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,iBAAiB;AAClB,GAFQ,EAEP,CAACD,cAAc,CAACE,IAAhB,EAAsBF,cAAc,CAACG,KAArC,CAFO,CAAT;;AAIA,QAAME,oBAAoB,GAAG,OAAOC,KAAP,EAAcC,KAAd,KAAwB;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACA,UAAMN,iBAAiB,CAAC,EAAE,GAAGD,cAAL;AAAqB,OAACM,KAAD,GAASC;AAA9B,KAAD,CAAvB;AACD,GAHD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC1BrB,IAAAA,SAAS,CACN,eAAcW,cAAc,CAACE,IAAK,IAAGF,cAAc,CAACG,KAAM,EADpD,EAEP,KAFO,EAGPR,GAHO,CAAT,CAKGgB,IALH,CAKSC,GAAD,IAAS;AACbf,MAAAA,aAAa,CAACe,GAAG,CAAChB,UAAL,CAAb;AACAK,MAAAA,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhBI,QAAAA,aAAa,EAAES,IAAI,CAACC,IAAL,CAAUF,GAAG,CAACG,eAAJ,GAAsBf,cAAc,CAACG,KAA/C;AAFC,OAAD,CAAjB;AAID,KAXH,EAYGa,KAZH,CAYUC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACS,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KAdH;AAeD,GAhBD;;AAkBA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCpB,IAAAA,kBAAkB,CAACoB,KAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLvB,MAAAA,UADK;AAELI,MAAAA,cAFK;AAGLU,MAAAA,aAHK;AAILQ,MAAAA,eAJK;AAKLpB,MAAAA,eALK;AAMLO,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGX,QAVH,CADF;AAcD","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport fetchData from \"../services/api\";\r\n\r\nimport { useAuth } from \"./auth-context\";\r\nconst CandidatesContext = createContext();\r\nexport const useCandidates = () => useContext(CandidatesContext);\r\n\r\nexport function CandidatesProvider({ children }) {\r\n  const { jwt } = useAuth();\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [chosenCandidate, setChosenCandidate] = useState({});\r\n\r\n  const [paginationData, setPaginationData] = useState({\r\n    page: 1,\r\n    limit: 20,\r\n    numberOfPages: 5,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    setPaginationData\r\n  },[paginationData.page, paginationData.limit])\r\n\r\n  const updatePaginationData = async (field, value) => {\r\n    console.log(\"newpage\", value);\r\n    await setPaginationData({ ...paginationData, [field]: value });\r\n  };\r\n\r\n  const getCandidates = () => {\r\n    fetchData(\r\n      `/candidates/${paginationData.page}/${paginationData.limit}`,\r\n      \"get\",\r\n      jwt\r\n    )\r\n      .then((res) => {\r\n        setCandidates(res.candidates);\r\n        setPaginationData({\r\n          ...paginationData,\r\n          numberOfPages: Math.ceil(res.totalCandidates / paginationData.limit),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n  };\r\n\r\n  const chooseCandidate = (candi) => {\r\n    setChosenCandidate(candi);\r\n  };\r\n\r\n  return (\r\n    <CandidatesContext.Provider\r\n      value={{\r\n        candidates,\r\n        paginationData,\r\n        getCandidates,\r\n        chooseCandidate,\r\n        chosenCandidate,\r\n        updatePaginationData,\r\n      }}\r\n    >\r\n      {children}\r\n    </CandidatesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}