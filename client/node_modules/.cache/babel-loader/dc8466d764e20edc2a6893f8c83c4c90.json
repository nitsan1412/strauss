{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\strauss\\\\client\\\\src\\\\pages\\\\SignUp.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { validateLogin } from \"../helper/validations\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport InputField from \"../components/form/InputField\";\nimport { useNavigate } from \"react-router-dom\";\nexport default function SignUp() {\n  const navigate = useNavigate();\n  const {\n    login,\n    jwt\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    if (jwt) {\n      navigate(\"./dashboard\");\n    }\n  }, [jwt]);\n\n  const handleChange = (field, value) => {\n    setFormData({ ...formData,\n      [field]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const gotErrors = await validateLogin(formData);\n\n    if (Object.keys(gotErrors).length === 0) {\n      login(formData);\n    } else {\n      setErrors(gotErrors);\n    } // Implement your login logic here\n\n\n    const {\n      username,\n      password\n    } = formData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"For Registered Users \"), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: !!errors,\n    onSubmit: handleSubmit,\n    className: \"login_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"10\",\n    controlId: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    lable: \"User Name\",\n    fieldName: \"username\",\n    type: \"text\",\n    onChange: (field, value) => handleChange(field, value),\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    lable: \"Password\",\n    fieldName: \"password\",\n    type: \"password\",\n    onChange: (field, value) => handleChange(field, value),\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"SignIn\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"small_text_in_sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"allready registered? you can just \"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => navigate(\"/\"),\n    className: \"underline_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"sign in\")));\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/pages/SignUp.jsx"],"names":["React","useEffect","useState","useAuth","validateLogin","Button","Form","Col","InputField","useNavigate","SignUp","navigate","login","jwt","formData","setFormData","username","password","errors","setErrors","handleChange","field","value","handleSubmit","e","preventDefault","gotErrors","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { validateLogin } from \"../helper/validations\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\nimport InputField from \"../components/form/InputField\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate();\r\n\r\n  const { login, jwt } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (jwt) {\r\n      navigate(\"./dashboard\");\r\n    }\r\n  }, [jwt]);\r\n\r\n  const handleChange = (field, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const gotErrors = await validateLogin(formData);\r\n    if (Object.keys(gotErrors).length === 0) {\r\n      login(formData);\r\n    } else {\r\n      setErrors(gotErrors);\r\n    }\r\n    // Implement your login logic here\r\n    const { username, password } = formData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"inner-container\">\r\n        <h2>Login</h2>\r\n        <h4>For Registered Users </h4>\r\n        <Form\r\n          noValidate\r\n          validated={!!errors}\r\n          onSubmit={handleSubmit}\r\n          className=\"login_form\"\r\n        >\r\n          <Form.Group as={Col} md=\"10\" controlId=\"validationCustom01\">\r\n            <InputField\r\n              lable=\"User Name\"\r\n              fieldName=\"username\"\r\n              type=\"text\"\r\n              onChange={(field, value) => handleChange(field, value)}\r\n              errors={errors}\r\n            />\r\n            <InputField\r\n              lable=\"Password\"\r\n              fieldName=\"password\"\r\n              type=\"password\"\r\n              onChange={(field, value) => handleChange(field, value)}\r\n              errors={errors}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">SignIn</Button>\r\n        </Form>\r\n      </div>\r\n      <div className=\"small_text_in_sign-in\">\r\n        <span>allready registered? you can just </span>\r\n        <span onClick={() => navigate(\"/\")} className=\"underline_text\">\r\n          sign in\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}