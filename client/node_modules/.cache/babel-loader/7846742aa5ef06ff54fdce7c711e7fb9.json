{"ast":null,"code":"const URL = \"http://localhost:8000\";\nexport default async function fetchData(url, chosenMethod, token, data) {\n  let options = {};\n\n  switch (chosenMethod) {\n    case \"get\":\n      options = {\n        method: \"GET\",\n        Authorization: `Bearer ${token}`\n      };\n      break;\n\n    case \"post\":\n      console.log(\"post call\", data);\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"put\":\n      options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"patch\":\n      options = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"delete\":\n      options = {\n        method: \"DELETE\"\n      };\n\n    case \"login\":\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  if (options.method) {\n    const response = await fetch(`${URL}${url}`, options);\n\n    if (response.ok) {\n      const data = await response.json();\n      return data; // Return the response data\n    }\n  }\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/services/api.js"],"names":["URL","fetchData","url","chosenMethod","token","data","options","method","Authorization","console","log","headers","body","JSON","stringify","response","fetch","ok","json"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uBAAZ;AAEA,eAAe,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyD;AACtE,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQH,YAAR;AACE,SAAK,KAAL;AACEG,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,aAAa,EAAG,UAASJ,KAAM;AAFvB,OAAV;AAIA;;AACF,SAAK,MAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAzB;AACAC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,KAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA;AAERI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,OAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,OADA;AAERI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,QAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE;AADA,OAAV;;AAGF,SAAK,OAAL;AACED,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERI,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF;AACE;AArDJ;;AAuDA,MAAIC,OAAO,CAACC,MAAZ,EAAoB;AAClB,UAAMQ,QAAQ,GAAG,MAAOC,KAAK,CAAE,GAAEhB,GAAI,GAAEE,GAAI,EAAd,EAAiBI,OAAjB,CAA7B;;AACA,QAAIS,QAAQ,CAACE,EAAb,EAAiB;AAChB,YAAMZ,IAAI,GAAG,MAAMU,QAAQ,CAACG,IAAT,EAAnB;AACD,aAAOb,IAAP,CAFiB,CAEJ;AACd;AACA;AACF","sourcesContent":["const URL = \"http://localhost:8000\";\r\n\r\nexport default async function fetchData(url, chosenMethod, token, data) {\r\n  let options = {};\r\n  switch (chosenMethod) {\r\n    case \"get\":\r\n      options = {\r\n        method: \"GET\",\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n      break;\r\n    case \"post\":\r\n      console.log(\"post call\", data);\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"put\":\r\n      options = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"patch\":\r\n      options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"delete\":\r\n      options = {\r\n        method: \"DELETE\",\r\n      };\r\n    case \"login\":\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  if (options.method) {\r\n    const response = await  fetch(`${URL}${url}`, options);\r\n    if (response.ok) {\r\n     const data = await response.json();\r\n    return data; // Return the response data\r\n  } \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}