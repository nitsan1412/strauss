{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\components\\\\CustomPagination.jsx\";\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nexport default function CustomPagination({\n  currentPage,\n  totalPages,\n  onPageChange\n}) {\n  const createBtn = () => {\n    let numBtns = [];\n\n    for (let index = 1; index < totalPages + 1; index++) {\n      if (index === currPage) {\n        numBtns.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => changeCurrentPage(index),\n          className: \"currPage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 42\n          }\n        }, index)));\n      } else {\n        numBtns.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => changeCurrentPage(index),\n          className: \"notCurrPage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 42\n          }\n        }, index)));\n      }\n    }\n\n    return numBtns;\n  };\n\n  return /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: () => onPageChange(currentPage - 1),\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), pageItems, /*#__PURE__*/React.createElement(Pagination.Next, {\n    onClick: () => onPageChange(currentPage + 1),\n    disabled: currentPage === totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/components/CustomPagination.jsx"],"names":["React","Pagination","CustomPagination","currentPage","totalPages","onPageChange","createBtn","numBtns","index","currPage","push","changeCurrentPage","pageItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,WADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAIZ;AACD,QAAMC,SAAS,GAAC,MAAI;AAClB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,UAAU,GAAC,CAAvC,EAA0CI,KAAK,EAA/C,EAAmD;AAC/C,UAAIA,KAAK,KAAGC,QAAZ,EAAqB;AACjBF,QAAAA,OAAO,CAACG,IAAR,eAAa;AAAI,UAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgB;AAAQ,UAAA,OAAO,EAAE,MAAIG,iBAAiB,CAACH,KAAD,CAAtC;AAA+C,UAAA,SAAS,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACxBA,KADwB,CAAhB,CAAb;AAEH,OAHD,MAGO;AACHD,QAAAA,OAAO,CAACG,IAAR,eAAa;AAAI,UAAA,GAAG,EAAEF,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgB;AAAQ,UAAA,OAAO,EAAE,MAAIG,iBAAiB,CAACH,KAAD,CAAtC;AAA8C,UAAA,SAAS,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACxBA,KADwB,CAAhB,CAAb;AAEH;AACJ;;AACD,WAAOD,OAAP;AACH,GAZC;;AAaA,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMF,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAK,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGS,SALH,eAME,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMP,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAKC,UAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD","sourcesContent":["import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function CustomPagination({\r\n  currentPage,\r\n  totalPages,\r\n  onPageChange,\r\n}) {\r\n  const createBtn=()=>{\r\n    let numBtns = [];\r\n    for (let index = 1; index < totalPages+1; index++) {\r\n        if (index===currPage){\r\n            numBtns.push(<li key={index}><button onClick={()=>changeCurrentPage(index)} className=\"currPage\">\r\n                {index}</button></li>)\r\n        } else {\r\n            numBtns.push(<li key={index}><button onClick={()=>changeCurrentPage(index)}className=\"notCurrPage\">\r\n                {index}</button></li>)\r\n        }\r\n    }\r\n    return numBtns;\r\n}\r\n  return (\r\n    <Pagination>\r\n      <Pagination.Prev\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      />\r\n      {pageItems}\r\n      <Pagination.Next\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </Pagination>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}