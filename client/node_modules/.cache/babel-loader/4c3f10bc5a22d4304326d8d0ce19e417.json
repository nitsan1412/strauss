{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\strauss\\\\client\\\\src\\\\pages\\\\SignIn.jsx\";\nimport React, { useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { validateLogin } from \"../helper/validations\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport InputField from \"../components/form/InputField\";\nexport default function SignIn() {\n  const {\n    loginCall\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = e => {\n    const {\n      field,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [field]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const gotErrors = validateLogin(formData);\n\n    if (Object.keys(gotErrors).length === 0) {\n      loginCall(formData);\n    } else {\n      setErrors(gotErrors);\n    } // Implement your login logic here\n\n\n    const {\n      username,\n      password\n    } = formData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"For Registered Users \"), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: !!errors,\n    onSubmit: handleSubmit,\n    className: \"login_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"10\",\n    controlId: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    lable: \"User Name\",\n    fieldName: \"username\",\n    type: \"text\",\n    onChange: handleChange,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    lable: \"Password\",\n    fieldName: \"password\",\n    type: \"password\",\n    onChange: handleChange,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"SignIn\"))));\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/pages/SignIn.jsx"],"names":["React","useState","useAuth","validateLogin","Button","Form","Col","InputField","SignIn","loginCall","formData","setFormData","username","password","errors","setErrors","handleChange","e","field","value","target","handleSubmit","preventDefault","gotErrors","Object","keys","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,QAAkC,iBAAlC;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,OAAO,EAA7B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBF,CAAC,CAACG,MAA3B;AACAT,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACQ,KAAD,GAASC;AAFC,KAAD,CAAX;AAID,GAND;;AAQC,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,SAAS,GAAGpB,aAAa,CAACO,QAAD,CAA/B;;AACA,QAAIc,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,MAAvB,KAAkC,CAAtC,EAAyC;AACvCjB,MAAAA,SAAS,CAACC,QAAD,CAAT;AACD,KAFD,MAEO;AACLK,MAAAA,SAAS,CAACQ,SAAD,CAAT;AACD,KAP0B,CAQ3B;;;AACA,UAAM;AAAEX,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAyBH,QAA/B;AACD,GAVA;;AAYD,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,SAAS,EAAE,CAAC,CAACI,MAA9B;AAAsC,IAAA,QAAQ,EAAEO,YAAhD;AAA8D,IAAA,SAAS,EAAC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEf,GAAhB;AAAqB,IAAA,EAAE,EAAC,IAAxB;AAA6B,IAAA,SAAS,EAAC,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAEU,YAJZ;AAKE,IAAA,MAAM,EAAEF,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAkBE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,SAAS,EAAC,UAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAEE,YAJZ;AAKE,IAAA,MAAM,EAAEF,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF,eAsCE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF,CAHF,CADF,CADF;AAgDD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { validateLogin } from \"../helper/validations\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\nimport InputField from \"../components/form/InputField\";\r\n\r\nexport default function SignIn() {\r\n  const { loginCall } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { field, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n   const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const gotErrors = validateLogin(formData);\r\n    if (Object.keys(gotErrors).length === 0) {\r\n      loginCall(formData);\r\n    } else {\r\n      setErrors(gotErrors);\r\n    }\r\n    // Implement your login logic here\r\n    const { username, password } = formData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"inner-container\">\r\n        <h2>Login</h2>\r\n        <h4>For Registered Users </h4>\r\n        <Form noValidate validated={!!errors} onSubmit={handleSubmit} className=\"login_form\">\r\n          <Form.Group as={Col} md=\"10\" controlId=\"validationCustom01\">\r\n            <InputField\r\n              lable=\"User Name\"\r\n              fieldName=\"username\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n            {/* <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div> */}\r\n            <InputField\r\n              lable=\"Password\"\r\n              fieldName=\"password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n\r\n            {/* <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          /> */}\r\n          </Form.Group>\r\n          <Button type=\"submit\">SignIn</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}