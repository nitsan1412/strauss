{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\strauss\\\\client\\\\src\\\\context\\\\auth-context.js\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport fetchData from \"../services/api\";\nconst AuthContext = createContext();\nexport function AuthProvider({\n  children\n}) {\n  const [user, setUser] = useState(null);\n  const [jwt, setJwt] = useState(null);\n\n  const login = userData => {\n    fetchData(\"/auth/signIn\", \"login\", userData).then(data => {\n      console.log(\"login data:\", data);\n      setJwt(data.jwt);\n      setUser(data.user);\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    }); // Implement login logic here and set the user object if successful\n\n    setUser(userData);\n  };\n\n  const register = userData => {\n    fetchData(\"/auth/signup\", \"login\", userData).then(data => {\n      console.log(\"login data:\", data);\n      setJwt(data.jwt);\n      setUser(data.user);\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    }); // Implement login logic here and set the user object if successful\n\n    setUser(userData);\n  };\n\n  const logout = () => {\n    // Implement logout logic here and remove the user object\n    setUser(null);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      jwt,\n      login,\n      logout,\n      register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/context/auth-context.js"],"names":["React","createContext","useContext","useState","fetchData","AuthContext","AuthProvider","children","user","setUser","jwt","setJwt","login","userData","then","data","console","log","catch","error","register","logout","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEA,OAAO,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMS,KAAK,GAAIC,QAAD,IAAc;AAC1BT,IAAAA,SAAS,CAAC,cAAD,EAAiB,OAAjB,EAA0BS,QAA1B,CAAT,CACGC,IADH,CACSC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACAJ,MAAAA,MAAM,CAACI,IAAI,CAACL,GAAN,CAAN;AACAD,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACD,KALH,EAMGU,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KARH,EAD0B,CAU1B;;AACAV,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAZD;;AAcA,QAAMO,QAAQ,GAAIP,QAAD,IAAc;AAC7BT,IAAAA,SAAS,CAAC,cAAD,EAAiB,OAAjB,EAA0BS,QAA1B,CAAT,CACGC,IADH,CACSC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACAJ,MAAAA,MAAM,CAACI,IAAI,CAACL,GAAN,CAAN;AACAD,MAAAA,OAAO,CAACM,IAAI,CAACP,IAAN,CAAP;AACD,KALH,EAMGU,KANH,CAMUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KARH,EAD6B,CAU7B;;AACAV,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAZD;;AAcA,QAAMQ,MAAM,GAAG,MAAM;AACnB;AACAZ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQE,MAAAA,GAAR;AAAaE,MAAAA,KAAb;AAAoBS,MAAAA,MAApB;AAA4BD,MAAAA;AAA5B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QADH,CADF;AAKD;AAED,OAAO,SAASe,OAAT,GAAmB;AACxB,SAAOpB,UAAU,CAACG,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport fetchData from \"../services/api\";\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [jwt, setJwt] = useState(null);\r\n\r\n  const login = (userData) => {\r\n    fetchData(\"/auth/signIn\", \"login\", userData)\r\n      .then((data) => {\r\n        console.log(\"login data:\", data);\r\n        setJwt(data.jwt);\r\n        setUser(data.user);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n    // Implement login logic here and set the user object if successful\r\n    setUser(userData);\r\n  };\r\n\r\n  const register = (userData) => {\r\n    fetchData(\"/auth/signup\", \"login\", userData)\r\n      .then((data) => {\r\n        console.log(\"login data:\", data);\r\n        setJwt(data.jwt);\r\n        setUser(data.user);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n    // Implement login logic here and set the user object if successful\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    // Implement logout logic here and remove the user object\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, jwt, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}