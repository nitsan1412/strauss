{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCandidates } from \"../context/candidates-context\";\nimport { useAuth } from \"../context/auth-context\";\nimport { Row, Col, Button, Card, Container } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport CradsDashboard from \"../components/CradsDashboard\";\nimport ListDashboard from \"../components/ListDashboard\";\nimport Pagination from \"../components/Pagination\";\n\nfunction Home() {\n  const {\n    getCandidates,\n    candidates,\n    searchWord,\n    paginationData,\n    chooseCandidate\n  } = useCandidates();\n  const {\n    jwt\n  } = useAuth();\n  const navigate = useNavigate();\n  const [isList, setIsList] = useState(false);\n  const [page, setPage] = useState(paginationData.page || 0);\n  const [limit, setLimit] = useState(paginationData.limit || 20);\n  const [currentCandidates, setCurrentCandidates] = useState([]);\n  useEffect(() => {\n    if (jwt) {\n      getCandidates();\n    } else {\n      navigate(\"../\");\n    }\n  }, []);\n  useEffect(() => {\n    if (candidates.length > 0) {\n      setCurrentCandidates(candidates);\n    }\n  }, [candidates]);\n  useEffect(() => {\n    if (candidates.length > 0) {\n      setCurrentCandidates(candidates);\n    }\n  }, [candidates]);\n\n  const changeDisplay = () => {\n    setIsList(!isList);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"candidates\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"list-button\",\n    onClick: () => changeDisplay(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, isList ? \"show in cards\" : \"show as a list\"), /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), currentCandidates.length > 0 ? isList ? /*#__PURE__*/React.createElement(ListDashboard, {\n    currentCandidates: currentCandidates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(CradsDashboard, {\n    currentCandidates: currentCandidates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/pages/Dashboard.jsx"],"names":["React","useEffect","useState","useCandidates","useAuth","Row","Col","Button","Card","Container","useNavigate","CradsDashboard","ListDashboard","Pagination","Home","getCandidates","candidates","searchWord","paginationData","chooseCandidate","jwt","navigate","isList","setIsList","page","setPage","limit","setLimit","currentCandidates","setCurrentCandidates","length","changeDisplay"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCandidates } from \"../context/candidates-context\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { Row, Col, Button, Card, Container } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport CradsDashboard from \"../components/CradsDashboard\";\r\nimport ListDashboard from \"../components/ListDashboard\";\r\nimport Pagination from \"../components/Pagination\";\r\nfunction Home() {\r\n  const {\r\n    getCandidates,\r\n    candidates,\r\n    searchWord,\r\n    paginationData,\r\n    chooseCandidate,\r\n  } = useCandidates();\r\n  const { jwt } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [isList, setIsList] = useState(false);\r\n\r\n  const [page, setPage] = useState(paginationData.page || 0);\r\n  const [limit, setLimit] = useState(paginationData.limit || 20);\r\n  const [currentCandidates, setCurrentCandidates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (jwt) {\r\n      getCandidates();\r\n    } else {\r\n      navigate(\"../\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (candidates.length > 0) {\r\n      setCurrentCandidates(candidates);\r\n    }\r\n  }, [candidates]);\r\n\r\n  useEffect(() => {\r\n    if (candidates.length > 0) {\r\n      setCurrentCandidates(candidates);\r\n    }\r\n  }, [candidates]);\r\n\r\n  const changeDisplay = () => {\r\n    setIsList(!isList);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"dashboard-container\">\r\n      <Row>\r\n        <h2>candidates</h2>\r\n      </Row>\r\n      <Row>\r\n        <Button className=\"list-button\" onClick={() => changeDisplay()}>\r\n          {isList ? \"show in cards\" : \"show as a list\"}\r\n        </Button>\r\n        <Pagination />\r\n      </Row>\r\n      {currentCandidates.length > 0 ? (\r\n        isList ? (\r\n          <ListDashboard currentCandidates={currentCandidates} />\r\n        ) : (\r\n          <CradsDashboard currentCandidates={currentCandidates} />\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {/* <Row className=\"rows-candidate-cards\" gap={2}>\r\n        {currentCandidates?.map((cand, index) => {\r\n          return (\r\n            <Col xs={12} sm={6} md={4} lg={2} key={index}>\r\n              <Card className=\"candidate-small-card\">\r\n                <Card.Img\r\n                  variant=\"top\"\r\n                  src={cand.avatar}\r\n                  className=\"candidate-small-card-img\"\r\n                />\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    {cand.first_name} {cand.last_name}\r\n                  </Card.Title>\r\n                  <Card.Text>{cand.job_title}</Card.Text>\r\n                  <Button\r\n                    className=\"candidate-small-card-button\"\r\n                    onClick={() => {\r\n                      chooseCandidate(cand);\r\n                      navigate(`/candidate`);\r\n                    }}\r\n                  >\r\n                    full details\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}