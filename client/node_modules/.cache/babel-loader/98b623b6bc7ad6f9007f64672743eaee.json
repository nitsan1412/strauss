{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\context\\\\candidates-context.jsx\";\nimport React, { useState, createContext, useContext, useEffect } from \"react\"; // import Game from \"../logic/Game\";\n\nimport fetchData from \"../services/api\";\nimport { useAuth } from \"./auth-context\";\nconst CandidatesContext = createContext();\nexport const useCandidates = () => useContext(CandidatesContext);\nconst {\n  jwt\n} = useAuth(); // Access the user object from the context\n\nexport function CandidatesProvider({\n  children\n}) {\n  const [candidates, setCandidates] = useState([]);\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [paginationData, setPaginationData] = useState({\n    page: 1,\n    limit: 20\n  });\n  useEffect(() => {}, [searchWord, paginationData]);\n\n  const updatePaginationData = newPagination => {\n    setPaginationData(newPagination);\n  };\n\n  const updateSearchWord = newSearchWord => {\n    setSearchWord(newSearchWord);\n  };\n\n  const getCandidates = () => {\n    fetchData(\"/candidates\", \"get\", jwt).then(res => {\n      console.log(\"data:\", res);\n      setJwt(res.token); // setUser(res.user);\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    }); // Implement login logic here and set the user object if successful\n\n    setUser(userData);\n  };\n\n  return /*#__PURE__*/React.createElement(CandidatesContext.Provider, {\n    value: {\n      candidates,\n      searchWord,\n      paginationData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/context/candidates-context.jsx"],"names":["React","useState","createContext","useContext","useEffect","fetchData","useAuth","CandidatesContext","useCandidates","jwt","CandidatesProvider","children","candidates","setCandidates","searchWord","setSearchWord","paginationData","setPaginationData","page","limit","updatePaginationData","newPagination","updateSearchWord","newSearchWord","getCandidates","then","res","console","log","setJwt","token","catch","error","setUser","userData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,MAAMC,iBAAiB,GAAGL,aAAa,EAAvC;AACA,OAAO,MAAMM,aAAa,GAAG,MAAML,UAAU,CAACI,iBAAD,CAAtC;AACP,MAAM;AAAEE,EAAAA;AAAF,IAAUH,OAAO,EAAvB,C,CAA2B;;AAE3B,OAAO,SAASI,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAC/C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC;AAAEiB,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAAD,CAApD;AAEAf,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACU,UAAD,EAAaE,cAAb,CAAX,CAAT;;AACA,QAAMI,oBAAoB,GAAIC,aAAD,IAAmB;AAC9CJ,IAAAA,iBAAiB,CAACI,aAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,aAAD,IAAmB;AAC1CR,IAAAA,aAAa,CAACQ,aAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BnB,IAAAA,SAAS,CAAC,aAAD,EAAgB,KAAhB,EAAuBI,GAAvB,CAAT,CACGgB,IADH,CACSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACAG,MAAAA,MAAM,CAACH,GAAG,CAACI,KAAL,CAAN,CAFa,CAGb;AACD,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACK,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KARH,EAD0B,CAU1B;;AACAC,IAAAA,OAAO,CAACC,QAAD,CAAP;AACD,GAZD;;AAcA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLtB,MAAAA,UADK;AAELE,MAAAA,UAFK;AAGLE,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,QAPH,CADF;AAWD","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\n// import Game from \"../logic/Game\";\r\nimport fetchData from \"../services/api\";\r\n\r\nimport { useAuth } from \"./auth-context\";\r\nconst CandidatesContext = createContext();\r\nexport const useCandidates = () => useContext(CandidatesContext);\r\nconst { jwt } = useAuth(); // Access the user object from the context\r\n\r\nexport function CandidatesProvider({ children }) {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [paginationData, setPaginationData] = useState({ page: 1, limit: 20 });\r\n\r\n  useEffect(() => {}, [searchWord, paginationData]);\r\n  const updatePaginationData = (newPagination) => {\r\n    setPaginationData(newPagination);\r\n  };\r\n\r\n  const updateSearchWord = (newSearchWord) => {\r\n    setSearchWord(newSearchWord);\r\n  };\r\n\r\n  const getCandidates = () => {\r\n    fetchData(\"/candidates\", \"get\", jwt)\r\n      .then((res) => {\r\n        console.log(\"data:\", res);\r\n        setJwt(res.token);\r\n        // setUser(res.user);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n    // Implement login logic here and set the user object if successful\r\n    setUser(userData);\r\n  };\r\n\r\n  return (\r\n    <CandidatesContext.Provider\r\n      value={{\r\n        candidates,\r\n        searchWord,\r\n        paginationData,\r\n      }}\r\n    >\r\n      {children}\r\n    </CandidatesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}