{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\context\\\\candidates-context.jsx\";\nimport React, { useState, createContext, useContext, useEffect } from \"react\"; // import Game from \"../logic/Game\";\n\nimport fetchData from \"../services/api\";\nimport { useAuth } from \"./auth-context\";\nconst CandidatesContext = createContext();\nexport const useCandidates = () => useContext(CandidatesContext);\nexport function CandidatesProvider({\n  children\n}) {\n  const {\n    jwt\n  } = useAuth(); // Access the user object from the context\n\n  const [candidates, setCandidates] = useState([]);\n  const [chosenCandidate, setChosenCandidate] = useState({});\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [paginationData, setPaginationData] = useState({\n    page: 1,\n    limit: 20,\n    numberOfPages: 1\n  });\n  useEffect(() => {}, [searchWord, paginationData]);\n\n  const updatePaginationData = newPagination => {\n    setPaginationData(newPagination);\n  };\n\n  const updateSearchWord = newSearchWord => {\n    setSearchWord(newSearchWord);\n  };\n\n  const getCandidates = () => {\n    fetchData(\"/candidates/\", \"get\", jwt).then(res => {\n      setCandidates(res.candidates);\n      numberOfPages;\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  };\n\n  const chooseCandidate = candi => {\n    setChosenCandidate(candi);\n  };\n\n  return /*#__PURE__*/React.createElement(CandidatesContext.Provider, {\n    value: {\n      candidates,\n      searchWord,\n      paginationData,\n      getCandidates,\n      chooseCandidate,\n      chosenCandidate\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/context/candidates-context.jsx"],"names":["React","useState","createContext","useContext","useEffect","fetchData","useAuth","CandidatesContext","useCandidates","CandidatesProvider","children","jwt","candidates","setCandidates","chosenCandidate","setChosenCandidate","searchWord","setSearchWord","paginationData","setPaginationData","page","limit","numberOfPages","updatePaginationData","newPagination","updateSearchWord","newSearchWord","getCandidates","then","res","catch","error","console","chooseCandidate","candi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,MAAMC,iBAAiB,GAAGL,aAAa,EAAvC;AACA,OAAO,MAAMM,aAAa,GAAG,MAAML,UAAU,CAACI,iBAAD,CAAtC;AAEP,OAAO,SAASE,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAUL,OAAO,EAAvB,CAD+C,CACpB;;AAC3B,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,cAAD,EAAiBC,iBAAjB,IAAsClB,QAAQ,CAAC;AAAEmB,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,aAAa,EAAC;AAApC,GAAD,CAApD;AAEAlB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAACY,UAAD,EAAaE,cAAb,CAAX,CAAT;;AAEA,QAAMK,oBAAoB,GAAIC,aAAD,IAAmB;AAC9CL,IAAAA,iBAAiB,CAACK,aAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAIC,aAAD,IAAmB;AAC1CT,IAAAA,aAAa,CAACS,aAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BtB,IAAAA,SAAS,CAAC,cAAD,EAAiB,KAAjB,EAAwBM,GAAxB,CAAT,CACGiB,IADH,CACSC,GAAD,IAAS;AACbhB,MAAAA,aAAa,CAACgB,GAAG,CAACjB,UAAL,CAAb;AACAU,MAAAA,aAAa;AAAO,KAHxB,EAIGQ,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KANH;AAOD,GARD;;AAUA,QAAME,eAAe,GAAIC,KAAD,IAAW;AACjCnB,IAAAA,kBAAkB,CAACmB,KAAD,CAAlB;AACD,GAFD;;AAIA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AACLtB,MAAAA,UADK;AAELI,MAAAA,UAFK;AAGLE,MAAAA,cAHK;AAILS,MAAAA,aAJK;AAKLM,MAAAA,eALK;AAMLnB,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGJ,QAVH,CADF;AAcD","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\n// import Game from \"../logic/Game\";\r\nimport fetchData from \"../services/api\";\r\n\r\nimport { useAuth } from \"./auth-context\";\r\nconst CandidatesContext = createContext();\r\nexport const useCandidates = () => useContext(CandidatesContext);\r\n\r\nexport function CandidatesProvider({ children }) {\r\n  const { jwt } = useAuth(); // Access the user object from the context\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [chosenCandidate, setChosenCandidate] = useState({});\r\n\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [paginationData, setPaginationData] = useState({ page: 1, limit: 20, numberOfPages:1 });\r\n\r\n  useEffect(() => {}, [searchWord, paginationData]);\r\n\r\n  const updatePaginationData = (newPagination) => {\r\n    setPaginationData(newPagination);\r\n  };\r\n\r\n  const updateSearchWord = (newSearchWord) => {\r\n    setSearchWord(newSearchWord);\r\n  };\r\n\r\n  const getCandidates = () => {\r\n    fetchData(\"/candidates/\", \"get\", jwt)\r\n      .then((res) => {\r\n        setCandidates(res.candidates);\r\n        numberOfPages      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n  };\r\n\r\n  const chooseCandidate = (candi) => {\r\n    setChosenCandidate(candi);\r\n  };\r\n\r\n  return (\r\n    <CandidatesContext.Provider\r\n      value={{\r\n        candidates,\r\n        searchWord,\r\n        paginationData,\r\n        getCandidates,\r\n        chooseCandidate,\r\n        chosenCandidate,\r\n      }}\r\n    >\r\n      {children}\r\n    </CandidatesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}