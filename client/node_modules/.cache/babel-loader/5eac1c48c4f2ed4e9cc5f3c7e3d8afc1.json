{"ast":null,"code":"export const validateLogin = data => {\n  return {};\n};\nexport const validateSignUp = data => {\n  return {};\n};\n\nfunction validateForm(keysArray, data) {\n  const errors = {};\n  keysArray.forEach(key => {\n    if (!data[key]) {\n      errors[key] = `${key} is a required field`;\n    } else if (key === \"email\" && !/\\S+@\\S+\\.\\S+/.test(data.email)) {\n      errors.email = 'Invalid email format';\n    } else if (key === \"password\" && data.password.length < 8) {\n      errors.password = 'Password must be at least 8 characters long';\n    } else if (key === \"username\" && data.username.length < 8) {\n      errors.password = 'Username must be at least 8 characters long';\n    }\n  }); // Username validation\n\n  if (!username) {\n    errors.username = 'Username is required';\n  } else if (username.length < 4) {\n    errors.username = 'Username must be at least 4 characters long';\n  } // Check if there are any errors\n\n\n  const isValid = Object.keys(errors).length === 0;\n  return {\n    isValid,\n    errors\n  };\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/helper/validations.js"],"names":["validateLogin","data","validateSignUp","validateForm","keysArray","errors","forEach","key","test","email","password","length","username","isValid","Object","keys"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,IAAD,IAAU;AACrC,SAAO,EAAP;AACD,CAFM;AAIP,OAAO,MAAMC,cAAc,GAAID,IAAD,IAAU;AACtC,SAAO,EAAP;AACD,CAFM;;AAIP,SAASE,YAAT,CAAsBC,SAAtB,EAAiCH,IAAjC,EAAuC;AAGrC,QAAMI,MAAM,GAAG,EAAf;AAEAD,EAAAA,SAAS,CAACE,OAAV,CAAmBC,GAAD,IAAO;AACvB,QAAI,CAACN,IAAI,CAACM,GAAD,CAAT,EAAe;AACbF,MAAAA,MAAM,CAACE,GAAD,CAAN,GAAe,GAAEA,GAAI,sBAArB;AACD,KAFD,MAGK,IAAIA,GAAG,KAAI,OAAP,IAAkB,CAAC,eAAeC,IAAf,CAAoBP,IAAI,CAACQ,KAAzB,CAAvB,EAAwD;AAC3DJ,MAAAA,MAAM,CAACI,KAAP,GAAe,sBAAf;AACD,KAFI,MAGA,IAAIF,GAAG,KAAI,UAAP,IAAqBN,IAAI,CAACS,QAAL,CAAcC,MAAd,GAAuB,CAAhD,EAAmD;AACtDN,MAAAA,MAAM,CAACK,QAAP,GAAkB,6CAAlB;AACD,KAFI,MAGA,IAAIH,GAAG,KAAI,UAAP,IAAqBN,IAAI,CAACW,QAAL,CAAcD,MAAd,GAAuB,CAAhD,EAAmD;AACtDN,MAAAA,MAAM,CAACK,QAAP,GAAkB,6CAAlB;AACD;AAAG,GAZN,EALqC,CAmBrC;;AACA,MAAI,CAACE,QAAL,EAAe;AACbP,IAAAA,MAAM,CAACO,QAAP,GAAkB,sBAAlB;AACD,GAFD,MAEO,IAAIA,QAAQ,CAACD,MAAT,GAAkB,CAAtB,EAAyB;AAC9BN,IAAAA,MAAM,CAACO,QAAP,GAAkB,6CAAlB;AACD,GAxBoC,CA0BrC;;;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBM,MAApB,KAA+B,CAA/C;AAEA,SAAO;AAAEE,IAAAA,OAAF;AAAWR,IAAAA;AAAX,GAAP;AACD","sourcesContent":["export const validateLogin = (data) => {\r\n  return {};\r\n};\r\n\r\nexport const validateSignUp = (data) => {\r\n  return {};\r\n};\r\n\r\nfunction validateForm(keysArray, data) {\r\n\r\n  \r\n  const errors = {};\r\n\r\n  keysArray.forEach((key)=>{\r\n    if (!data[key]){\r\n      errors[key] = `${key} is a required field`\r\n    }\r\n    else if (key ===\"email\" && !/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n      errors.email = 'Invalid email format';\r\n    }\r\n    else if (key ===\"password\" && data.password.length < 8) {\r\n      errors.password = 'Password must be at least 8 characters long';\r\n    }\r\n    else if (key ===\"username\" && data.username.length < 8) {\r\n      errors.password = 'Username must be at least 8 characters long';\r\n    }  })\r\n\r\n  // Username validation\r\n  if (!username) {\r\n    errors.username = 'Username is required';\r\n  } else if (username.length < 4) {\r\n    errors.username = 'Username must be at least 4 characters long';\r\n  }\r\n\r\n  // Check if there are any errors\r\n  const isValid = Object.keys(errors).length === 0;\r\n\r\n  return { isValid, errors };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}