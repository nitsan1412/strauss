{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCandidates } from \"../context/candidates-context\";\nimport { useAuth } from \"../context/auth-context\";\nimport { Row, Button, Container } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/dashboard.css\";\nimport CradsDashboard from \"../components/CradsDashboard\";\nimport ListDashboard from \"../components/ListDashboard\";\nimport CustomPagination from \"../components/CustomPagination\";\nimport PageSize from \"../components/PageSize\";\n\nfunction Home() {\n  const {\n    getCandidates,\n    showInCards,\n    candidates,\n    updatePaginationData,\n    paginationData,\n    chooseCandidate,\n    changeDashboardDisplay\n  } = useCandidates();\n  const {\n    jwt\n  } = useAuth();\n  const navigate = useNavigate();\n  const [isList, setIsList] = useState(false);\n  useEffect(() => {\n    if (jwt) {\n      getCandidates();\n    } else {\n      navigate(\"../\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const changeDisplay = () => {\n    changeDashboardDisplay(!isList);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"candidates\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"pagination-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageSize, {\n    currPageSize: paginationData.limit,\n    updatePageSize: newLimit => updatePaginationData(\"limit\", newLimit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"pagination-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CustomPagination, {\n    currentPage: paginationData.page,\n    totalPages: paginationData.numberOfPages,\n    onPageChange: newpage => updatePaginationData(\"page\", newpage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"list-button\",\n    onClick: () => changeDisplay(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, isList ? \"show in cards\" : \"show as a list\")), candidates.length > 0 ? isList ? /*#__PURE__*/React.createElement(ListDashboard, {\n    candidates: candidates,\n    chooseCandidate: chooseCandidate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(CradsDashboard, {\n    candidates: candidates,\n    chooseCandidate: chooseCandidate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/pages/Dashboard.jsx"],"names":["React","useEffect","useState","useCandidates","useAuth","Row","Button","Container","useNavigate","CradsDashboard","ListDashboard","CustomPagination","PageSize","Home","getCandidates","showInCards","candidates","updatePaginationData","paginationData","chooseCandidate","changeDashboardDisplay","jwt","navigate","isList","setIsList","changeDisplay","limit","newLimit","page","numberOfPages","newpage","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useCandidates } from \"../context/candidates-context\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { Row, Button, Container } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/dashboard.css\";\r\nimport CradsDashboard from \"../components/CradsDashboard\";\r\nimport ListDashboard from \"../components/ListDashboard\";\r\nimport CustomPagination from \"../components/CustomPagination\";\r\nimport PageSize from \"../components/PageSize\";\r\nfunction Home() {\r\n  const {\r\n    getCandidates,\r\n    showInCards,\r\n    candidates,\r\n    updatePaginationData,\r\n    paginationData,\r\n    chooseCandidate,\r\n    changeDashboardDisplay,\r\n  } = useCandidates();\r\n  const { jwt } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [isList, setIsList] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (jwt) {\r\n      getCandidates();\r\n    } else {\r\n      navigate(\"../\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const changeDisplay = () => {\r\n    changeDashboardDisplay(!isList);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"dashboard-container\">\r\n      <Row>\r\n        <h2>candidates</h2>\r\n      </Row>\r\n      <Row className=\"pagination-row\">\r\n        <PageSize\r\n          currPageSize={paginationData.limit}\r\n          updatePageSize={(newLimit) => updatePaginationData(\"limit\", newLimit)}\r\n        />\r\n      </Row>\r\n\r\n      <Row className=\"pagination-row\">\r\n        <CustomPagination\r\n          currentPage={paginationData.page}\r\n          totalPages={paginationData.numberOfPages}\r\n          onPageChange={(newpage) => updatePaginationData(\"page\", newpage)}\r\n        />\r\n        <Button className=\"list-button\" onClick={() => changeDisplay()}>\r\n          {isList ? \"show in cards\" : \"show as a list\"}\r\n        </Button>\r\n      </Row>\r\n      {candidates.length > 0 ? (\r\n        isList ? (\r\n          <ListDashboard\r\n            candidates={candidates}\r\n            chooseCandidate={chooseCandidate}\r\n          />\r\n        ) : (\r\n          <CradsDashboard\r\n            candidates={candidates}\r\n            chooseCandidate={chooseCandidate}\r\n          />\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}