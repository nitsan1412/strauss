{"ast":null,"code":"export default function validateForm(fieldsArray, data) {\n  const FIELDS = {\n    email: {\n      validate: () => !/\\S+@\\S+\\.\\S+/.test(data.email),\n      error: \"Invalid email format\"\n    },\n    password: {\n      validate: () => data.password.length < 8,\n      error: \"password must be at least 8 characters long\"\n    },\n    username: {\n      validate: () => data.username.length < 4,\n      error: \"username must be at least 4 characters long\"\n    }\n  };\n  const errors = {};\n  fieldsArray.forEach(field => {\n    if (!data[field]) {\n      errors[field] = `${field} is a required field`;\n    } else if (FIELDS[field].validate) errors[field] = FIELDS[field].error;\n  });\n  return {\n    errors\n  };\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/helper/validations.js"],"names":["validateForm","fieldsArray","data","FIELDS","email","validate","test","error","password","length","username","errors","forEach","field"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,WAAtB,EAAmCC,IAAnC,EAAyC;AACtD,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,MAAM,CAAC,eAAeC,IAAf,CAAoBJ,IAAI,CAACE,KAAzB,CADZ;AAELG,MAAAA,KAAK,EAAE;AAFF,KADM;AAKbC,IAAAA,QAAQ,EAAE;AACRH,MAAAA,QAAQ,EAAE,MAAMH,IAAI,CAACM,QAAL,CAAcC,MAAd,GAAuB,CAD/B;AAERF,MAAAA,KAAK,EAAE;AAFC,KALG;AASbG,IAAAA,QAAQ,EAAE;AACRL,MAAAA,QAAQ,EAAE,MAAMH,IAAI,CAACQ,QAAL,CAAcD,MAAd,GAAuB,CAD/B;AAERF,MAAAA,KAAK,EAAE;AAFC;AATG,GAAf;AAeA,QAAMI,MAAM,GAAG,EAAf;AAEAV,EAAAA,WAAW,CAACW,OAAZ,CAAqBC,KAAD,IAAW;AAC7B,QAAI,CAACX,IAAI,CAACW,KAAD,CAAT,EAAkB;AAChBF,MAAAA,MAAM,CAACE,KAAD,CAAN,GAAiB,GAAEA,KAAM,sBAAzB;AACD,KAFD,MAEO,IAAIV,MAAM,CAACU,KAAD,CAAN,CAAcR,QAAlB,EAA4BM,MAAM,CAACE,KAAD,CAAN,GAAgBV,MAAM,CAACU,KAAD,CAAN,CAAcN,KAA9B;AACpC,GAJD;AAMA,SAAO;AAAEI,IAAAA;AAAF,GAAP;AACD","sourcesContent":["export default function validateForm(fieldsArray, data) {\r\n  const FIELDS = {\r\n    email: {\r\n      validate: () => !/\\S+@\\S+\\.\\S+/.test(data.email),\r\n      error: \"Invalid email format\",\r\n    },\r\n    password: {\r\n      validate: () => data.password.length < 8,\r\n      error: \"password must be at least 8 characters long\",\r\n    },\r\n    username: {\r\n      validate: () => data.username.length < 4,\r\n      error: \"username must be at least 4 characters long\",\r\n    },\r\n  };\r\n\r\n  const errors = {};\r\n\r\n  fieldsArray.forEach((field) => {\r\n    if (!data[field]) {\r\n      errors[field] = `${field} is a required field`;\r\n    } else if (FIELDS[field].validate) errors[field] = FIELDS[field].error;\r\n  });\r\n\r\n  return { errors };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}