{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\strauss\\\\client\\\\src\\\\pages\\\\SignIn.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"../context/auth-context\";\nimport { validateLogin } from \"../helper/validations\";\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport InputField from \"../components/form/InputField\";\nexport default function SignIn() {\n  const {\n    loginCall,\n    jwt\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [newJwt, setNewJwt] = useState(jwt);\n  useEffect(() => {\n    if (jwt) setNewJwt(jwt);\n  }, [jwt]);\n  useEffect(() => {\n    if (jwt) setNewJwt(jwt);\n  }, [newJwt]);\n\n  const handleChange = e => {\n    const {\n      field,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [field]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const gotErrors = await validateLogin(formData);\n\n    if (Object.keys(gotErrors).length === 0) {\n      loginCall(formData);\n    } else {\n      setErrors(gotErrors);\n    } // Implement your login logic here\n\n\n    const {\n      username,\n      password\n    } = formData;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"For Registered Users \"), /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: !!errors,\n    onSubmit: handleSubmit,\n    className: \"login_form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    md: \"10\",\n    controlId: \"validationCustom01\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    lable: \"User Name\",\n    fieldName: \"username\",\n    type: \"text\",\n    onChange: handleChange,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputField, {\n    lable: \"Password\",\n    fieldName: \"password\",\n    type: \"password\",\n    onChange: handleChange,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"SignIn\"))));\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/pages/SignIn.jsx"],"names":["React","useEffect","useState","useAuth","validateLogin","Button","Form","Col","InputField","SignIn","loginCall","jwt","formData","setFormData","username","password","errors","setErrors","newJwt","setNewJwt","handleChange","e","field","value","target","handleSubmit","preventDefault","gotErrors","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../context/auth-context\";\r\nimport { validateLogin } from \"../helper/validations\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\n\r\nimport InputField from \"../components/form/InputField\";\r\n\r\nexport default function SignIn() {\r\n  const { loginCall, jwt } = useAuth();\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [newJwt, setNewJwt] = useState(jwt);\r\n\r\n  useEffect(()=>{\r\n    if (jwt) setNewJwt(jwt)\r\n  },[jwt])\r\n  \r\n  useEffect(()=>{\r\n    if (jwt) setNewJwt(jwt)\r\n  },[newJwt])\r\n\r\n  const handleChange = (e) => {\r\n    const { field, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const gotErrors = await validateLogin(formData);\r\n    if (Object.keys(gotErrors).length === 0) {\r\n      loginCall(formData);\r\n    } else {\r\n      setErrors(gotErrors);\r\n    }\r\n    // Implement your login logic here\r\n    const { username, password } = formData;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"inner-container\">\r\n        <h2>Login</h2>\r\n        <h4>For Registered Users </h4>\r\n        <Form\r\n          noValidate\r\n          validated={!!errors}\r\n          onSubmit={handleSubmit}\r\n          className=\"login_form\"\r\n        >\r\n          <Form.Group as={Col} md=\"10\" controlId=\"validationCustom01\">\r\n            <InputField\r\n              lable=\"User Name\"\r\n              fieldName=\"username\"\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n            {/* <label htmlFor=\"username\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div> */}\r\n            <InputField\r\n              lable=\"Password\"\r\n              fieldName=\"password\"\r\n              type=\"password\"\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n\r\n            {/* <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          /> */}\r\n          </Form.Group>\r\n          <Button type=\"submit\">SignIn</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}