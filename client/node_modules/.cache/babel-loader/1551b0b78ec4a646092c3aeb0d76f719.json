{"ast":null,"code":"import { ListGroupItem } from \"react-bootstrap\";\nconst URL = \"http://localhost:8000\";\nexport default async function fetchData(url, chosenMethod, token, data) {\n  let options = {};\n\n  switch (chosenMethod) {\n    case \"get\":\n      options = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      };\n      break;\n\n    case \"post\":\n      console.log(\"post call\", data);\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"put\":\n      options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"patch\":\n      options = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"delete\":\n      options = {\n        method: \"DELETE\"\n      };\n\n    case \"login\":\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  const response = await fetch(`${URL}${url}`, options);\n\n  if (response.ok) {\n    return await response.json();\n  } else {\n    console.log(response);\n    return response.Error;\n  }\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/services/api.js"],"names":["ListGroupItem","URL","fetchData","url","chosenMethod","token","data","options","method","headers","Authorization","console","log","body","JSON","stringify","response","fetch","ok","json","Error"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AAEA,MAAMC,GAAG,GAAG,uBAAZ;AAEA,eAAe,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4CC,KAA5C,EAAmDC,IAAnD,EAAyD;AACtE,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQH,YAAR;AACE,SAAK,KAAL;AACEG,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,UAASL,KAAM;AAFxB;AAFD,OAAV;AAOA;;AACF,SAAK,MAAL;AACEM,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,IAAzB;AACAC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,KAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,OAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,OADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,QAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE;AADA,OAAV;;AAGF,SAAK,OAAL;AACED,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AALE,OAAV;AAOA;;AAEF;AACE;AAxDJ;;AA0DA,QAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEhB,GAAI,GAAEE,GAAI,EAAd,EAAiBI,OAAjB,CAA5B;;AACA,MAAIS,QAAQ,CAACE,EAAb,EAAiB;AACf,WAAO,MAAMF,QAAQ,CAACG,IAAT,EAAb;AACD,GAFD,MAEO;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,WAAOA,QAAQ,CAACI,KAAhB;AACD;AACF","sourcesContent":["import { ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst URL = \"http://localhost:8000\";\r\n\r\nexport default async function fetchData(url, chosenMethod, token, data) {\r\n  let options = {};\r\n  switch (chosenMethod) {\r\n    case \"get\":\r\n      options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      break;\r\n    case \"post\":\r\n      console.log(\"post call\", data);\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"put\":\r\n      options = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"patch\":\r\n      options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"delete\":\r\n      options = {\r\n        method: \"DELETE\",\r\n      };\r\n    case \"login\":\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  const response = await fetch(`${URL}${url}`, options);\r\n  if (response.ok) {\r\n    return await response.json();\r\n  } else {\r\n    console.log(response);\r\n    return response.Error;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}