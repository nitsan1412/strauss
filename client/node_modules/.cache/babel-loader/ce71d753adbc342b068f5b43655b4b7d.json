{"ast":null,"code":"const URL = \"localhost:8000\";\nexport default async function fetchData(url, chosenmethod, data) {\n  let options;\n\n  switch (method) {\n    case \"get\":\n      options = {\n        method: \"GET\" // headers: {\n        //   \"Content-Type\": \"application/json\",\n        // },\n\n      };\n      break;\n\n    case \"post\":\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"put\":\n      options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"patch\":\n      options = {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    case \"delete\":\n      options = {\n        method: \"DELETE\"\n      };\n\n    case \"login\":\n      options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      };\n      break;\n\n    default:\n      console.log(\"wrong method\", method);\n      break;\n  }\n\n  if (options.method) {\n    return await fetchData(`${url}${url}`, options);\n  }\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/services/api.js"],"names":["URL","fetchData","url","chosenmethod","data","options","method","headers","body","JSON","stringify","console","log"],"mappings":"AAAA,MAAMA,GAAG,GAAG,gBAAZ;AAEA,eAAe,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4CC,IAA5C,EAAkD;AAC/D,MAAIC,OAAJ;;AACA,UAAQC,MAAR;AACE,SAAK,KAAL;AACED,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA,CAER;AACA;AACA;;AAJQ,OAAV;AAMA;;AACF,SAAK,MAAL;AACED,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,KAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,KADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,OAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,OADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALE,OAAV;AAOA;;AAEF,SAAK,QAAL;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE;AADA,OAAV;;AAGF,SAAK,OAAL;AACED,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,MADA;AAERC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFD;AAKRC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALE,OAAV;AAOA;;AAEF;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,MAA5B;AACA;AAvDJ;;AAyDA,MAAID,OAAO,CAACC,MAAZ,EAAoB;AAClB,WAAO,MAAML,SAAS,CAAE,GAAEC,GAAI,GAAEA,GAAI,EAAd,EAAiBG,OAAjB,CAAtB;AACD;AACF","sourcesContent":["const URL = \"localhost:8000\";\r\n\r\nexport default async function fetchData(url, chosenmethod, data) {\r\n  let options;\r\n  switch (method) {\r\n    case \"get\":\r\n      options = {\r\n        method: \"GET\",\r\n        // headers: {\r\n        //   \"Content-Type\": \"application/json\",\r\n        // },\r\n      };\r\n      break;\r\n    case \"post\":\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"put\":\r\n      options = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"patch\":\r\n      options = {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    case \"delete\":\r\n      options = {\r\n        method: \"DELETE\",\r\n      };\r\n    case \"login\":\r\n      options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      };\r\n      break;\r\n\r\n    default:\r\n      console.log(\"wrong method\", method);\r\n      break;\r\n  }\r\n  if (options.method) {\r\n    return await fetchData(`${url}${url}`, options);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}