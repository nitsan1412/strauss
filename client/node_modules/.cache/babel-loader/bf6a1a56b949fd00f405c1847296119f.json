{"ast":null,"code":"export default function validateForm(fieldsArray, data) {\n  const errors = {};\n  fieldsArray.forEach(field => {\n    if (!data[key]) {\n      errors[key] = `${key} is a required field`;\n    } else if (key === \"email\" && !/\\S+@\\S+\\.\\S+/.test(data.email)) {\n      errors.email = \"Invalid email format\";\n    } else if (key === \"password\" && data.password.length < 8) {\n      errors.password = \"password must be at least 8 characters long\";\n    } else if (key === \"username\" && data.username.length < 4) {\n      errors.username = \"username must be at least 4 characters long\";\n    }\n  });\n  return {\n    errors\n  };\n}\nconst FIELDS = {\n  email: {\n    validate: () => !/\\S+@\\S+\\.\\S+/.test(data.email),\n    error: \"Invalid email format\"\n  },\n  password: {\n    function: () => data.password.length < 8,\n    error: \"password must be at least 8 characters long\"\n  },\n  username: {\n    function: () => data.username.length < 4,\n    error: \"username must be at least 4 characters long\"\n  }\n};","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/helper/validations.js"],"names":["validateForm","fieldsArray","data","errors","forEach","field","key","test","email","password","length","username","FIELDS","validate","error","function"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,WAAtB,EAAmCC,IAAnC,EAAyC;AACtD,QAAMC,MAAM,GAAG,EAAf;AAEAF,EAAAA,WAAW,CAACG,OAAZ,CAAqBC,KAAD,IAAW;AAC7B,QAAI,CAACH,IAAI,CAACI,GAAD,CAAT,EAAgB;AACdH,MAAAA,MAAM,CAACG,GAAD,CAAN,GAAe,GAAEA,GAAI,sBAArB;AACD,KAFD,MAEO,IAAIA,GAAG,KAAK,OAAR,IAAmB,CAAC,eAAeC,IAAf,CAAoBL,IAAI,CAACM,KAAzB,CAAxB,EAAyD;AAC9DL,MAAAA,MAAM,CAACK,KAAP,GAAe,sBAAf;AACD,KAFM,MAEA,IAAIF,GAAG,KAAK,UAAR,IAAsBJ,IAAI,CAACO,QAAL,CAAcC,MAAd,GAAuB,CAAjD,EAAoD;AACzDP,MAAAA,MAAM,CAACM,QAAP,GAAkB,6CAAlB;AACD,KAFM,MAEA,IAAIH,GAAG,KAAK,UAAR,IAAsBJ,IAAI,CAACS,QAAL,CAAcD,MAAd,GAAuB,CAAjD,EAAoD;AACzDP,MAAAA,MAAM,CAACQ,QAAP,GAAkB,6CAAlB;AACD;AACF,GAVD;AAYA,SAAO;AAAER,IAAAA;AAAF,GAAP;AACD;AACD,MAAMS,MAAM,GAAG;AACbJ,EAAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAE,MAAM,CAAC,eAAeN,IAAf,CAAoBL,IAAI,CAACM,KAAzB,CADZ;AAELM,IAAAA,KAAK,EAAE;AAFF,GADM;AAKbL,EAAAA,QAAQ,EAAE;AACRM,IAAAA,QAAQ,EAAE,MAAMb,IAAI,CAACO,QAAL,CAAcC,MAAd,GAAuB,CAD/B;AAERI,IAAAA,KAAK,EAAE;AAFC,GALG;AASbH,EAAAA,QAAQ,EAAE;AACRI,IAAAA,QAAQ,EAAE,MAAMb,IAAI,CAACS,QAAL,CAAcD,MAAd,GAAuB,CAD/B;AAERI,IAAAA,KAAK,EAAE;AAFC;AATG,CAAf","sourcesContent":["export default function validateForm(fieldsArray, data) {\r\n  const errors = {};\r\n\r\n  fieldsArray.forEach((field) => {\r\n    if (!data[key]) {\r\n      errors[key] = `${key} is a required field`;\r\n    } else if (key === \"email\" && !/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n      errors.email = \"Invalid email format\";\r\n    } else if (key === \"password\" && data.password.length < 8) {\r\n      errors.password = \"password must be at least 8 characters long\";\r\n    } else if (key === \"username\" && data.username.length < 4) {\r\n      errors.username = \"username must be at least 4 characters long\";\r\n    }\r\n  });\r\n\r\n  return { errors };\r\n}\r\nconst FIELDS = {\r\n  email: {\r\n    validate: () => !/\\S+@\\S+\\.\\S+/.test(data.email),\r\n    error: \"Invalid email format\",\r\n  },\r\n  password: {\r\n    function: () => data.password.length < 8,\r\n    error: \"password must be at least 8 characters long\",\r\n  },\r\n  username: {\r\n    function: () => data.username.length < 4,\r\n    error: \"username must be at least 4 characters long\",\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}