{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\components\\\\CustomPagination.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport \"../styles/dashboard.css\";\nexport default function CustomPagination({\n  currentPage,\n  totalPages,\n  onPageChange\n}) {\n  const [chosenPage, setChosenPage] = useState(currentPage);\n  useEffect(() => {}, [currentPage]);\n\n  const createBtn = () => {\n    let numBtns = [];\n\n    for (let index = 1; index < totalPages + 1; index++) {\n      if (index === currentPage) {\n        numBtns.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => onPageChange(index),\n          className: \"currPage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }\n        }, index)));\n      } else {\n        numBtns.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => onPageChange(index),\n          className: \"notCurrPage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }\n        }, index)));\n      }\n    }\n\n    return numBtns;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": \"pagination\",\n    className: \"pagination-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, currentPage !== 1 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onPageChange(currentPage - 1),\n    className: \"notCurrPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"\\xAB\"))), createBtn(), currentPage !== totalPages && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onPageChange(currentPage + 1),\n    className: \"notCurrPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"\\xBB\")))));\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/components/CustomPagination.jsx"],"names":["React","useEffect","useState","Pagination","CustomPagination","currentPage","totalPages","onPageChange","chosenPage","setChosenPage","createBtn","numBtns","index","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAO,yBAAP;AAEA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,WADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAIZ;AACH,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACG,WAAD,CAA5C;AAEEJ,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,CAACI,WAAD,CAFO,CAAT;;AAGA,QAAMK,SAAS,GAAG,MAAM;AACtB,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,UAAU,GAAG,CAAzC,EAA4CM,KAAK,EAAjD,EAAqD;AACnD,UAAIA,KAAK,KAAKP,WAAd,EAA2B;AACzBM,QAAAA,OAAO,CAACE,IAAR,eACE;AAAK,UAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAQ,UAAA,OAAO,EAAE,MAAML,YAAY,CAACK,KAAD,CAAnC;AAA4C,UAAA,SAAS,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KADH,CADF,CADF;AAOD,OARD,MAQO;AACLD,QAAAA,OAAO,CAACE,IAAR,eACE;AAAK,UAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAQ,UAAA,OAAO,EAAE,MAAML,YAAY,CAACK,KAAD,CAAnC;AAA4C,UAAA,SAAS,EAAC,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KADH,CADF,CADF;AAOD;AACF;;AACD,WAAOD,OAAP;AACD,GAtBD;;AAuBA,sBACE;AAAK,kBAAW,YAAhB;AAA6B,IAAA,SAAS,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,KAAK,CAAhB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAME,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CAFJ,EAWGK,SAAS,EAXZ,EAYGL,WAAW,KAAKC,UAAhB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CAbJ,CADF,CADF;AA2BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport \"../styles/dashboard.css\";\r\n\r\nexport default function CustomPagination({\r\n  currentPage,\r\n  totalPages,\r\n  onPageChange,\r\n}) {\r\nconst [chosenPage, setChosenPage] = useState(currentPage)\r\n\r\n  useEffect(()=>{\r\n\r\n  },[currentPage])\r\n  const createBtn = () => {\r\n    let numBtns = [];\r\n    for (let index = 1; index < totalPages + 1; index++) {\r\n      if (index === currentPage) {\r\n        numBtns.push(\r\n          <div key={index}>\r\n            <button onClick={() => onPageChange(index)} className=\"currPage\">\r\n              {index}\r\n            </button>\r\n          </div>\r\n        );\r\n      } else {\r\n        numBtns.push(\r\n          <div key={index}>\r\n            <button onClick={() => onPageChange(index)} className=\"notCurrPage\">\r\n              {index}\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return numBtns;\r\n  };\r\n  return (\r\n    <div aria-label=\"pagination\" className=\"pagination-div\">\r\n      <ul className=\"pagination\">\r\n        {currentPage !== 1 && (\r\n          <div>\r\n            <button\r\n              onClick={() => onPageChange(currentPage - 1)}\r\n              className=\"notCurrPage\"\r\n            >\r\n              <span aria-hidden=\"true\">«</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n        {createBtn()}\r\n        {currentPage !== totalPages && (\r\n          <div>\r\n            <button\r\n              onClick={() => onPageChange(currentPage + 1)}\r\n              className=\"notCurrPage\"\r\n            >\r\n              <span>»</span>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}