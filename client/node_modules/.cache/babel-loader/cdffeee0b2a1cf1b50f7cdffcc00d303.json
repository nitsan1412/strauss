{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\context\\\\candidates-context.jsx\";\nimport React, { useState, createContext, useContext, useEffect } from \"react\";\nimport fetchData from \"../services/api\";\nimport { useAuth } from \"./auth-context\";\nconst CandidatesContext = createContext();\nexport const useCandidates = () => useContext(CandidatesContext);\nexport function CandidatesProvider({\n  children\n}) {\n  const {\n    jwt\n  } = useAuth();\n  const [candidates, setCandidates] = useState([]);\n  const [chosenCandidate, setChosenCandidate] = useState({});\n  const [showInCrad, setShowInCrad] = useState(true);\n  const [paginationData, setPaginationData] = useState({\n    page: 1,\n    limit: 100,\n    numberOfPages: 1\n  });\n  useEffect(() => {\n    getCandidates(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [paginationData.page, paginationData.limit]);\n\n  const updatePaginationData = (field, value) => {\n    setPaginationData({ ...paginationData,\n      [field]: value\n    });\n  };\n\n  const changeDashboardDisplay = () => {\n    setPaginationData({ ...paginationData,\n      [field]: value\n    });\n  };\n\n  const getCandidates = async () => {\n    await fetchData(`/candidates/?page=${paginationData.page}${paginationData.limit && `/&limit=${paginationData.limit}`}`, \"get\", jwt).then(res => {\n      setCandidates(res.candidates);\n      setPaginationData({ ...paginationData,\n        numberOfPages: Math.ceil(res.totalCandidates / paginationData.limit)\n      });\n      if (Math.ceil(res.totalCandidates / paginationData.limit) < paginationData.page) setPaginationData({ ...paginationData,\n        page: 1\n      });\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  };\n\n  const chooseCandidate = candi => {\n    setChosenCandidate(candi);\n  };\n\n  return /*#__PURE__*/React.createElement(CandidatesContext.Provider, {\n    value: {\n      candidates,\n      paginationData,\n      getCandidates,\n      chooseCandidate,\n      chosenCandidate,\n      updatePaginationData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/context/candidates-context.jsx"],"names":["React","useState","createContext","useContext","useEffect","fetchData","useAuth","CandidatesContext","useCandidates","CandidatesProvider","children","jwt","candidates","setCandidates","chosenCandidate","setChosenCandidate","showInCrad","setShowInCrad","paginationData","setPaginationData","page","limit","numberOfPages","getCandidates","updatePaginationData","field","value","changeDashboardDisplay","then","res","Math","ceil","totalCandidates","catch","error","console","chooseCandidate","candi"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport fetchData from \"../services/api\";\r\n\r\nimport { useAuth } from \"./auth-context\";\r\nconst CandidatesContext = createContext();\r\nexport const useCandidates = () => useContext(CandidatesContext);\r\n\r\nexport function CandidatesProvider({ children }) {\r\n  const { jwt } = useAuth();\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [chosenCandidate, setChosenCandidate] = useState({});\r\n  const [showInCrad, setShowInCrad] = useState(true);\r\n  const [paginationData, setPaginationData] = useState({\r\n    page: 1,\r\n    limit: 100,\r\n    numberOfPages: 1,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCandidates();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [paginationData.page, paginationData.limit]);\r\n\r\n  const updatePaginationData = (field, value) => {\r\n    setPaginationData({ ...paginationData, [field]: value });\r\n  };\r\n\r\n  \r\n  const changeDashboardDisplay = () => {\r\n    setPaginationData({ ...paginationData, [field]: value });\r\n  };\r\n\r\n  const getCandidates = async () => {\r\n    await fetchData(\r\n      `/candidates/?page=${paginationData.page}${\r\n        paginationData.limit && `/&limit=${paginationData.limit}`\r\n      }`,\r\n      \"get\",\r\n      jwt\r\n    )\r\n      .then((res) => {\r\n        setCandidates(res.candidates);\r\n        setPaginationData({\r\n          ...paginationData,\r\n          numberOfPages: Math.ceil(res.totalCandidates / paginationData.limit),\r\n        });\r\n        if (\r\n          Math.ceil(res.totalCandidates / paginationData.limit) <\r\n          paginationData.page\r\n        )\r\n          setPaginationData({ ...paginationData, page: 1 });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n  };\r\n\r\n  const chooseCandidate = (candi) => {\r\n    setChosenCandidate(candi);\r\n  };\r\n\r\n  return (\r\n    <CandidatesContext.Provider\r\n      value={{\r\n        candidates,\r\n        paginationData,\r\n        getCandidates,\r\n        chooseCandidate,\r\n        chosenCandidate,\r\n        updatePaginationData,\r\n      }}\r\n    >\r\n      {children}\r\n    </CandidatesContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}