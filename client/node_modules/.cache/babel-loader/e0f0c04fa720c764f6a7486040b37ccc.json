{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\context\\\\auth-context.jsx\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport fetchData from \"../services/api\";\nconst AuthContext = createContext();\nexport function AuthProvider({\n  children\n}) {\n  const [user, setUser] = useState(null);\n  const [jwt, setJwt] = useState(null);\n\n  const signIn = async userData => {\n    await fetchData(\"/auth/signIn\", \"post\", null, userData).then(res => {\n      setJwt(res.token);\n      setUser(userData);\n    }).catch(error => {\n      console.error(\"Error fetching users:\", error);\n    });\n  };\n\n  const signup = async userData => {\n    await fetchData(\"/auth/signup\", \"post\", null, userData).then(async data => {\n      if (data) {\n        await setUser(userData);\n        await signIn(userData);\n      }\n    }).catch(error => {\n      throw error;\n    });\n    setUser(userData);\n  };\n\n  const logout = () => {\n    // Implement logout logic here and remove the user object\n    setUser(null);\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      user,\n      jwt,\n      signIn,\n      logout,\n      signup\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/context/auth-context.jsx"],"names":["React","createContext","useContext","useState","fetchData","AuthContext","AuthProvider","children","user","setUser","jwt","setJwt","signIn","userData","then","res","token","catch","error","console","signup","data","logout","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AAEA,OAAO,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,IAAD,CAA9B;;AAEA,QAAMS,MAAM,GAAG,MAAOC,QAAP,IAAoB;AACjC,UAAMT,SAAS,CAAC,cAAD,EAAiB,MAAjB,EAAyB,IAAzB,EAA+BS,QAA/B,CAAT,CACHC,IADG,CACGC,GAAD,IAAS;AACbJ,MAAAA,MAAM,CAACI,GAAG,CAACC,KAAL,CAAN;AACAP,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAJG,EAKHI,KALG,CAKIC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD,KAPG,CAAN;AAQD,GATD;;AAWA,QAAME,MAAM,GAAG,MAAOP,QAAP,IAAoB;AACjC,UAAMT,SAAS,CAAC,cAAD,EAAiB,MAAjB,EAAyB,IAAzB,EAA+BS,QAA/B,CAAT,CACHC,IADG,CACE,MAAOO,IAAP,IAAgB;AACpB,UAAIA,IAAJ,EAAU;AACR,cAAMZ,OAAO,CAACI,QAAD,CAAb;AACA,cAAMD,MAAM,CAACC,QAAD,CAAZ;AACD;AACF,KANG,EAOHI,KAPG,CAOIC,KAAD,IAAW;AAChB,YAAMA,KAAN;AACD,KATG,CAAN;AAUAT,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAZD;;AAcA,QAAMS,MAAM,GAAG,MAAM;AACnB;AACAb,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,IAAF;AAAQE,MAAAA,GAAR;AAAaE,MAAAA,MAAb;AAAqBU,MAAAA,MAArB;AAA6BF,MAAAA;AAA7B,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QADH,CADF;AAKD;AAED,OAAO,SAASgB,OAAT,GAAmB;AACxB,SAAOrB,UAAU,CAACG,WAAD,CAAjB;AACD","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport fetchData from \"../services/api\";\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [jwt, setJwt] = useState(null);\r\n\r\n  const signIn = async (userData) => {\r\n    await fetchData(\"/auth/signIn\", \"post\", null, userData)\r\n      .then((res) => {\r\n        setJwt(res.token);\r\n        setUser(userData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching users:\", error);\r\n      });\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    await fetchData(\"/auth/signup\", \"post\", null, userData)\r\n      .then(async (data) => {\r\n        if (data) {\r\n          await setUser(userData);\r\n          await signIn(userData);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    // Implement logout logic here and remove the user object\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, jwt, signIn, logout, signup }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}