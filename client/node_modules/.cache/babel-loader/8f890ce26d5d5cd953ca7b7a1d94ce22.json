{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\git-strauss\\\\client\\\\src\\\\components\\\\CustomPagination.jsx\";\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nexport default function CustomPagination({\n  currentPage,\n  totalPages,\n  onPageChange\n}) {\n  const pageItems = [];\n\n  for (let page = 1; page <= totalPages; page++) {\n    pageItems.push( /*#__PURE__*/React.createElement(Pagination.Item, {\n      key: page,\n      active: page === currentPage,\n      onClick: () => onPageChange(\"page\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, page));\n  }\n\n  return /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Pagination.Prev, {\n    onClick: () => onPageChange(currentPage - 1),\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), pageItems, /*#__PURE__*/React.createElement(Pagination.Next, {\n    onClick: () => onPageChange(currentPage + 1),\n    disabled: currentPage === totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/programming stuff/git-strauss/client/src/components/CustomPagination.jsx"],"names":["React","Pagination","CustomPagination","currentPage","totalPages","onPageChange","pageItems","page","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,eAAe,SAASC,gBAAT,CAA0B;AACvCC,EAAAA,WADuC;AAEvCC,EAAAA,UAFuC;AAGvCC,EAAAA;AAHuC,CAA1B,EAIZ;AACD,QAAMC,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAIH,UAA3B,EAAuCG,IAAI,EAA3C,EAA+C;AAC7CD,IAAAA,SAAS,CAACE,IAAV,eACE,oBAAC,UAAD,CAAY,IAAZ;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,MAAM,EAAEA,IAAI,KAAKJ,WAFnB;AAGE,MAAA,OAAO,EAAE,MAAME,YAAY,CAAC,MAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGE,IALH,CADF;AASD;;AACD,sBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMF,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAK,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGG,SALH,eAME,oBAAC,UAAD,CAAY,IAAZ;AACE,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACF,WAAW,GAAG,CAAf,CAD7B;AAEE,IAAA,QAAQ,EAAEA,WAAW,KAAKC,UAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD","sourcesContent":["import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function CustomPagination({\r\n  currentPage,\r\n  totalPages,\r\n  onPageChange,\r\n}) {\r\n  const pageItems = [];\r\n  for (let page = 1; page <= totalPages; page++) {\r\n    pageItems.push(\r\n      <Pagination.Item\r\n        key={page}\r\n        active={page === currentPage}\r\n        onClick={() => onPageChange(\"page\")}\r\n      >\r\n        {page}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n  return (\r\n    <Pagination>\r\n      <Pagination.Prev\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      />\r\n      {pageItems}\r\n      <Pagination.Next\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </Pagination>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}