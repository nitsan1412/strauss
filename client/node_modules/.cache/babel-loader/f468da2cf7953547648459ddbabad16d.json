{"ast":null,"code":"var _jsxFileName = \"D:\\\\programming stuff\\\\strauss\\\\client\\\\src\\\\context\\\\AppContext.jsx\";\nimport React, { useState, createContext, useContext } from \"react\"; // import Game from \"../logic/Game\";\n\nconst AppContext = createContext;\nexport const useGame = () => useContext(AppContext);\nexport function AppProvider({\n  children\n}) {\n  const [candidates, setCandidates] = useState([]);\n  const [currentUser, setCurrentUser] = useState({}); // const start = () => {\n  //   const game = getGameFromURL();\n  //   setGame(game);\n  //   game.start();\n  //   if (\n  //     !localStorage.getItem(\"isGameMuted\") ||\n  //     localStorage.getItem(\"isGameMuted\") === \"false\"\n  //   )\n  //     startMusic();\n  //   const interval = setInterval(() => {\n  //     const numberOfFinished = game.characterManager.charactersDone().length;\n  //     game.step();\n  //     forceUpdate();\n  //     if (numberOfFinished < game.characterManager.charactersDone().length) {\n  //       playSound(\"meow\", game.isGameMuted);\n  //     }\n  //     if (game.status === \"over\") {\n  //       clearInterval(interval);\n  //       playSound(\"newHighScore\", game.isGameMuted);\n  //     }\n  //   }, Game.STEP * 1000);\n  //   setIntervalHandler(interval);\n  // };\n  // const chooseRule = (rule: Rule) => {\n  //   game.chooseRule(rule);\n  //   forceUpdate();\n  // };\n  // const declineRule = (rule: Rule) => {\n  //   game.ruleManager.declineRule(rule);\n  //   forceUpdate();\n  // };\n  // const changeGameSounds = () => {\n  //   localStorage.setItem(\"isGameMuted\", String(!game.isGameMuted));\n  //   if (!game.isGameMuted) stopMusic();\n  //   else startMusic();\n  //   game.isGameMuted = !game.isGameMuted;\n  // };\n  // const cancel = () => {\n  //   clearInterval(intervalHandler);\n  //   setIntervalHandler(undefined);\n  //   setGame(undefined);\n  //   forceUpdate();\n  //   if (!game.isGameMuted) stopMusic();\n  // };\n  // const cancelMusic = () => {\n  //   if (!game.isGameMuted) stopMusic();\n  // };\n  // const getGameFromURL = () => {\n  //   console.log(\"speed\", searchParams.get(\"speed\"));\n  //   return new Game(\n  //     Number(searchParams.get(\"speed\") || Game.INITIAL_SPEED),\n  //     Number(searchParams.get(\"duration\") || Game.DURATION),\n  //     Number(\n  //       searchParams.get(\"charachterAdditionChance\") ||\n  //         CharacterManager.CHARACTER_ADDITION_CHANCE\n  //     )\n  //   );\n  // };\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      candidates,\n      currentUser // cancel,\n      // cancelMusic,\n      // chooseRule,\n      // declineRule,\n      // changeGameSounds,\n      // stopMusic,\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["D:/programming stuff/strauss/client/src/context/AppContext.jsx"],"names":["React","useState","createContext","useContext","AppContext","useGame","AppProvider","children","candidates","setCandidates","currentUser","setCurrentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D,C,CACA;;AAEA,MAAMC,UAAU,GAAGF,aAAnB;AAEA,OAAO,MAAMG,OAAO,GAAG,MAAMF,UAAU,CAACC,UAAD,CAAhC;AAEP,OAAO,SAASE,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAFwC,CAIxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,UADK;AAELE,MAAAA,WAFK,CAGL;AACA;AACA;AACA;AACA;AACA;;AARK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGH,QAZH,CADF;AAgBD","sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\r\n// import Game from \"../logic/Game\";\r\n\r\nconst AppContext = createContext;\r\n\r\nexport const useGame = () => useContext(AppContext);\r\n\r\nexport function AppProvider({ children }) {\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  // const start = () => {\r\n  //   const game = getGameFromURL();\r\n  //   setGame(game);\r\n  //   game.start();\r\n  //   if (\r\n  //     !localStorage.getItem(\"isGameMuted\") ||\r\n  //     localStorage.getItem(\"isGameMuted\") === \"false\"\r\n  //   )\r\n  //     startMusic();\r\n  //   const interval = setInterval(() => {\r\n  //     const numberOfFinished = game.characterManager.charactersDone().length;\r\n  //     game.step();\r\n  //     forceUpdate();\r\n  //     if (numberOfFinished < game.characterManager.charactersDone().length) {\r\n  //       playSound(\"meow\", game.isGameMuted);\r\n  //     }\r\n  //     if (game.status === \"over\") {\r\n  //       clearInterval(interval);\r\n  //       playSound(\"newHighScore\", game.isGameMuted);\r\n  //     }\r\n  //   }, Game.STEP * 1000);\r\n  //   setIntervalHandler(interval);\r\n  // };\r\n\r\n  // const chooseRule = (rule: Rule) => {\r\n  //   game.chooseRule(rule);\r\n  //   forceUpdate();\r\n  // };\r\n\r\n  // const declineRule = (rule: Rule) => {\r\n  //   game.ruleManager.declineRule(rule);\r\n  //   forceUpdate();\r\n  // };\r\n\r\n  // const changeGameSounds = () => {\r\n  //   localStorage.setItem(\"isGameMuted\", String(!game.isGameMuted));\r\n  //   if (!game.isGameMuted) stopMusic();\r\n  //   else startMusic();\r\n  //   game.isGameMuted = !game.isGameMuted;\r\n  // };\r\n\r\n  // const cancel = () => {\r\n  //   clearInterval(intervalHandler);\r\n  //   setIntervalHandler(undefined);\r\n  //   setGame(undefined);\r\n  //   forceUpdate();\r\n  //   if (!game.isGameMuted) stopMusic();\r\n  // };\r\n\r\n  // const cancelMusic = () => {\r\n  //   if (!game.isGameMuted) stopMusic();\r\n  // };\r\n\r\n  // const getGameFromURL = () => {\r\n  //   console.log(\"speed\", searchParams.get(\"speed\"));\r\n  //   return new Game(\r\n  //     Number(searchParams.get(\"speed\") || Game.INITIAL_SPEED),\r\n  //     Number(searchParams.get(\"duration\") || Game.DURATION),\r\n  //     Number(\r\n  //       searchParams.get(\"charachterAdditionChance\") ||\r\n  //         CharacterManager.CHARACTER_ADDITION_CHANCE\r\n  //     )\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        candidates,\r\n        currentUser,\r\n        // cancel,\r\n        // cancelMusic,\r\n        // chooseRule,\r\n        // declineRule,\r\n        // changeGameSounds,\r\n        // stopMusic,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}